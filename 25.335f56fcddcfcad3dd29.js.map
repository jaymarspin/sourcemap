{"version":3,"sources":["./src/app/components/common/selector/selector.component.html","./src/app/components/common/selector/selector.component.ts","./src/app/pages/offer/edit-offer/edit-offer.page.html","./src/app/pages/offer/edit-offer/edit-offer-routing.module.ts","./src/app/pages/offer/edit-offer/edit-offer.page.ts","./src/app/pages/offer/edit-offer/edit-offer.module.ts"],"names":["SelectorComponent","modalController","options","selectedOptions","Array","this","selectorsArr","selectors","getPreviousSelected","selected","length","forEach","s","toggle","check","opt","delete","allowMultiple","push","save","obj","some","item","value","filter","dismiss","emit","selection","evt","target","keyword","trim","option","label","toLocaleLowerCase","indexOf","toLowerCase","cancel","searchSelectors","routes","path","PARAM_ID","children","component","EditOfferPage","route","translate","offerSrvc","formBuilder","router","subs","Subscription","countryCode","environment","offerForm","initOfferForm","add","parseURL","offer","paramMap","subscribe","params","Id","get","e","pageTitle","getOfferInfo","getCurrentNavigation","extras","state","states","OpportunityId","STATE_OPPID","console","log","group","id","subtotal","disabled","total","variantName","required","yearMake","sellingPrice","exciseDuty","fleetDiscountPctg","fleetDiscount","discount","salesCampaign","lifestyle","regType","regFee","hpOwnership","hpOwnershipFee","roadTax","insurance","bookingFee","initErrorMessages","form","lang","formErrorMessages","key","Object","keys","controls","from","create","componentProps","header","backdropDismiss","showBackdrop","modal","onDidDismiss","modalVal","present","offerId","getOfferById","done","selectVariantName","pathMatch","EditOfferPageRoutingModule","forChild","EditOfferPageModule"],"mappings":"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","file":"25.335f56fcddcfcad3dd29.js","sourcesContent":["<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">\r\n        <ion-icon slot=\"icon-only\" name=\"arrow-back\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <ion-searchbar (ionChange)=\"searchSelectors($event)\" debounce=\"500\" placeholder=\"Search\" inputmode=\"search\"></ion-searchbar>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content class=\"ion-padding\">\r\n  <ion-label color=\"primary\"\r\n    ><b>{{ header | uppercase }}</b></ion-label\r\n  >\r\n  <ion-virtual-scroll [items]=\"selectorsArr\">\r\n    <ion-item *virtualItem=\"let s\" (click)=\"toggle(s)\">\r\n      <ion-label>\r\n        <h5 class=\"no-margin-bottom\">{{ s?.label }}</h5>\r\n      </ion-label>\r\n      <ion-checkbox slot=\"start\" [checked]=\"isSelected(s)\"></ion-checkbox>\r\n    </ion-item>\r\n  </ion-virtual-scroll>\r\n</ion-content>\r\n<ion-footer class=\"ion-padding\" *ngIf=\"allowMultiple\">\r\n  <ion-button fill=\"solid\" expand=\"block\" color=\"primary\" (click)=\"save()\">\r\n    {{ 'Common_Save' | translate }}\r\n  </ion-button>\r\n</ion-footer>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SelectOption } from 'src/app/models/common/select-option.model';\r\n\r\n@Component({\r\n  selector: 'app-selector',\r\n  templateUrl: './selector.component.html',\r\n  styleUrls: ['./selector.component.scss'],\r\n})\r\nexport class SelectorComponent implements OnInit {\r\n  @Input() selectors: SelectOption[];\r\n  @Input() allowMultiple: boolean;\r\n  @Input() header: string;\r\n  @Input() selected: SelectOption[];\r\n  searchInput: string;\r\n  selectorsArr: SelectOption[];\r\n\r\n  @Output() options = new EventEmitter<SelectOption[]>();\r\n\r\n  private selectedOptions = new Array<SelectOption>();\r\n  constructor(private modalController: ModalController) {}\r\n\r\n  ngOnInit() {\r\n    this.selectorsArr = this.selectors;\r\n    this.getPreviousSelected();\r\n  }\r\n\r\n  getPreviousSelected(): void {\r\n    if (this.selected.length > 0) {\r\n      this.selected.forEach((s: SelectOption) => this.toggle(s));\r\n    }\r\n  }\r\n\r\n  isSelected(s: SelectOption): boolean {\r\n    return this.check(s);\r\n  }\r\n\r\n  toggle(opt: SelectOption) {\r\n    if (this.check(opt)) {\r\n      this.delete(opt);\r\n    } else {\r\n      if (this.allowMultiple) {\r\n        this.selectedOptions.push(opt);\r\n      } else {\r\n        this.selectedOptions = new Array<SelectOption>();\r\n        this.selectedOptions.push(opt);\r\n        this.save();\r\n      }\r\n    }\r\n  }\r\n\r\n  check(obj: SelectOption) {\r\n    return this.selectedOptions.some((item) => item.value === obj.value);\r\n  }\r\n\r\n  delete(obj: SelectOption) {\r\n    this.selectedOptions = this.selectedOptions.filter((item) => item.value !== obj.value);\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  save() {\r\n    this.options.emit(this.selectedOptions);\r\n    this.modalController.dismiss({\r\n      selection: this.selectedOptions,\r\n    });\r\n  }\r\n\r\n  searchSelectors(evt: Event) {\r\n    if (!evt || !evt.target) {\r\n      return;\r\n    }\r\n    const target = evt.target as HTMLInputElement;\r\n    if (!target.value) {\r\n      return;\r\n    }\r\n    const keyword = target.value;\r\n    this.selectorsArr = this.selectors;\r\n    if (keyword && keyword.trim() !== '') {\r\n      this.selectorsArr = this.selectors.filter((option: SelectOption) => {\r\n        return option.label.toLocaleLowerCase().indexOf(keyword.toLowerCase()) > -1;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\" mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"\" text=\"{{'Common_Back'|translate}}\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"done()\">{{'Common_Done'|translate}}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>{{pageTitle}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ng-container [formGroup]=\"offerForm\">\r\n    <div>\r\n      <ion-item>\r\n        <ion-input formControlName=\"variantName\" placeholder='{{\"EditOfferPage_VariantName\"|translate}}' (click)=\"selectVariantName()\"></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.variantName\" [messages]=\"formErrorMessages.variantName\"></app-item-err>\r\n      <ion-item>\r\n        <ion-datetime displayFormat=\"YYYY\" formControlName=\"yearMake\" placeholder='{{\"EditOfferPage_YearMake\"|translate}}'></ion-datetime>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.yearMake\" [messages]=\"formErrorMessages.yearMake\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"sellingPrice\" placeholder='{{\"EditOfferPage_SellingPrice\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.sellingPrice\" [messages]=\"formErrorMessages.sellingPrice\"></app-item-err>\r\n      <ion-item>\r\n        <ion-select formControlName=\"exciseDuty\" placeholder='{{\"EditOfferPage_ExciseDuty\"|translate}}'>\r\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of exciseDuties\"> {{ opt.label }} </ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.exciseDuty\" [messages]=\"formErrorMessages.exciseDuty\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"fleetDiscountPctg\" placeholder='{{\"EditOfferPage_FleetDiscountPctg\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.fleetDiscountPctg\" [messages]=\"formErrorMessages.fleetDiscountPctg\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"fleetDiscount\" placeholder='{{\"EditOfferPage_FleetDiscount\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.fleetDiscount\" [messages]=\"formErrorMessages.fleetDiscount\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"discount\" placeholder='{{\"EditOfferPage_Discount\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.discount\" [messages]=\"formErrorMessages.discount\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"salesCampaign\" placeholder='{{\"EditOfferPage_SalesCampaign\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.salesCampaign\" [messages]=\"formErrorMessages.salesCampaign\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"lifestyle\" placeholder='{{\"EditOfferPage_Lifestyle\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.lifestyle\" [messages]=\"formErrorMessages.lifestyle\"></app-item-err>\r\n      <ion-item>\r\n        <ion-label class=\"no-opacity\">\r\n          <b>{{\"EditOfferPage_Subtotal\"|translate}}</b>\r\n        </ion-label>\r\n        <ion-input formControlName=\"subtotal\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-select formControlName=\"regType\" placeholder='{{\"EditOfferPage_RegistrationType\"|translate}}'>\r\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of regTypes\"> {{ opt.label }} </ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.regType\" [messages]=\"formErrorMessages.regType\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"regFee\" placeholder='{{\"EditOfferPage_RegistrationFee\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.regFee\" [messages]=\"formErrorMessages.regFee\"></app-item-err>\r\n      <ion-item>\r\n        <ion-select formControlName=\"hpOwnership\" placeholder='{{\"EditOfferPage_HPOwnership\"|translate}}'>\r\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of hpOwnerships\"> {{ opt.label }} </ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.hpOwnership\" [messages]=\"formErrorMessages.hpOwnership\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"hpOwnershipFee\" placeholder='{{\"EditOfferPage_HPOwnershipFee\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.hpOwnershipFee\" [messages]=\"formErrorMessages.hpOwnershipFee\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"roadTax\" placeholder='{{\"EditOfferPage_RoadTax\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.roadTax\" [messages]=\"formErrorMessages.roadTax\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"insurance\" placeholder='{{\"EditOfferPage_Insurance\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.insurance\" [messages]=\"formErrorMessages.insurance\"></app-item-err>\r\n      <ion-item>\r\n        <ion-label class=\"no-opacity\">\r\n          <b>{{\"EditOfferPage_TotalPrice\"|translate}}</b>\r\n        </ion-label>\r\n        <ion-input formControlName=\"total\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-input formControlName=\"bookingFee\" placeholder='{{\"EditOfferPage_BookingFee\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"offerForm.controls?.bookingFee\" [messages]=\"formErrorMessages.bookingFee\"></app-item-err>\r\n    </div>\r\n  </ng-container>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EditOfferPage } from './edit-offer.page';\r\nimport { EditOfferPageRoutingKeys } from './edit-offer-routing.keys';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: `:${EditOfferPageRoutingKeys.PARAM_ID}`,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EditOfferPage,\r\n        pathMatch: 'full',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EditOfferPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { from, Subscription } from 'rxjs';\r\nimport { SelectorComponent } from 'src/app/components/common/selector/selector.component';\r\nimport { FormErrorMessages } from 'src/app/models/common/form-error.model';\r\nimport { Offer } from 'src/app/models/common/offer.model';\r\nimport { SelectOption } from 'src/app/models/common/select-option.model';\r\nimport { CommonOfferService } from 'src/app/services/common/offer/offer.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EditOfferPageRoutingKeys } from './edit-offer-routing.keys';\r\n\r\n@Component({\r\n  selector: 'app-edit-offer',\r\n  templateUrl: './edit-offer.page.html',\r\n  styleUrls: ['./edit-offer.page.scss'],\r\n})\r\nexport class EditOfferPage implements OnInit {\r\n  pageTitle: string;\r\n  private subs = new Subscription();\r\n  offer: Offer;\r\n  states: object;\r\n  countryCode = environment.countryCode;\r\n  offerForm: FormGroup;\r\n  formErrorMessages: FormErrorMessages;\r\n  exciseDuties: SelectOption[];\r\n  regTypes: SelectOption[];\r\n  hpOwnerships: SelectOption[];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private translate: TranslateService,\r\n    private offerSrvc: CommonOfferService,\r\n    private formBuilder: FormBuilder,\r\n    private modalController: ModalController,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.offerForm = this.initOfferForm();\r\n    this.subs.add(this.parseURL());\r\n  }\r\n\r\n  parseURL() {\r\n    this.offer = new Offer();\r\n    return this.route.paramMap.subscribe((params) => {\r\n      this.offer.Id = params.get(EditOfferPageRoutingKeys.PARAM_ID);\r\n      if (this.offer.Id === EditOfferPageRoutingKeys.PARAM_ID) {\r\n        this.translate.get('EditOfferPage_NewOffer').subscribe((e) => {\r\n          this.pageTitle = e;\r\n        });\r\n      } else {\r\n        this.translate.get('EditOfferPage_EditOffer').subscribe((e) => {\r\n          this.pageTitle = e;\r\n          this.getOfferInfo(this.offer.Id);\r\n        });\r\n      }\r\n      if (this.router.getCurrentNavigation().extras.state) {\r\n        this.states = this.router.getCurrentNavigation().extras.state;\r\n        this.offer.OpportunityId = this.states[EditOfferPageRoutingKeys.STATE_OPPID];\r\n        console.log(this.offer.OpportunityId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initOfferForm(): FormGroup {\r\n    const offerForm = this.formBuilder.group({\r\n      id: [''],\r\n      subtotal: [{ value: '', disabled: true }],\r\n      total: [{ value: '', disabled: true }],\r\n      variantName: ['', [Validators.required]],\r\n      yearMake: ['', [Validators.required]],\r\n      sellingPrice: ['', [Validators.required]],\r\n      exciseDuty: [''],\r\n      fleetDiscountPctg: [''],\r\n      fleetDiscount: [''],\r\n      discount: [''],\r\n      salesCampaign: [''],\r\n      lifestyle: [''],\r\n      regType: ['', [Validators.required]],\r\n      regFee: [''],\r\n      hpOwnership: [''],\r\n      hpOwnershipFee: [''],\r\n      roadTax: [''],\r\n      insurance: [''],\r\n      bookingFee: [''],\r\n    });\r\n    this.initErrorMessages(offerForm);\r\n    return offerForm;\r\n  }\r\n\r\n  private initErrorMessages(form: FormGroup) {\r\n    this.translate.get('Error_CannotBeEmpty').subscribe((lang) => {\r\n      this.formErrorMessages = {\r\n        group: {},\r\n      };\r\n      if (!form) {\r\n        return;\r\n      }\r\n      for (const key of Object.keys(form.controls)) {\r\n        switch (key) {\r\n          case 'variantName':\r\n          case 'yearMake':\r\n          case 'sellingPrice':\r\n          case 'regType':\r\n            this.formErrorMessages[key] = {\r\n              required: lang,\r\n            };\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  selectVariantName() {\r\n    this.translate.get('EditOfferPage_SelectVariant').subscribe((lang) => {\r\n      from(\r\n        this.modalController.create({\r\n          component: SelectorComponent,\r\n          componentProps: {\r\n            selectors: [],\r\n            selected: [],\r\n            allowMultiple: false,\r\n            header: lang,\r\n          },\r\n          backdropDismiss: false,\r\n          showBackdrop: true,\r\n        })\r\n      ).subscribe((modal: HTMLIonModalElement) => {\r\n        from(modal.onDidDismiss()).subscribe((modalVal) => {\r\n          if (modalVal && modalVal.data && modalVal.data.selection) {\r\n            // this.setModelInterest(modalVal.data.selection);\r\n          }\r\n        });\r\n        modal.present();\r\n      });\r\n    });\r\n  }\r\n\r\n  getOfferInfo(offerId: string) {\r\n    this.offerSrvc.getOfferById(offerId).subscribe((e) => {\r\n      this.offer = e;\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  done() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EditOfferPageRoutingModule } from './edit-offer-routing.module';\r\n\r\nimport { EditOfferPage } from './edit-offer.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ItemErrComponentModule } from 'src/app/components/common/item-err/item-err.module';\r\nimport { SelectorComponentModule } from 'src/app/components/common/selector/selector.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    IonicModule,\r\n    ItemErrComponentModule,\r\n    SelectorComponentModule,\r\n    EditOfferPageRoutingModule,\r\n  ],\r\n  declarations: [EditOfferPage],\r\n})\r\nexport class EditOfferPageModule {}\r\n"],"sourceRoot":"webpack:///"}