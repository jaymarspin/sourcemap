{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.module.ts"],"names":["routes","path","component","LoginPage","authService","router","navCtrl","errService","zone","VaultSrvc","user$","this","subUser","authState$","subAuthState","subs","Subscription","user","subscribe","isActive","BASE","isLoggedIn","session","Date","getTime","setSession","toString","then","navigateForward","redirectIfAny","catch","normalizer","err","handleError","add","logError","unsubscribe","subShowAuth","combineLatest","pipe","first","usr","authState","hasSavedToken","loadedOAuth","console","log","signIn","error","presentServerErr","biometricLogin","LoginPageRoutingModule","forChild","LoginPageModule"],"mappings":"oWAuBQ,qBACE,oBACE,qBACE,wBAAkG,yDAAkB,gBAAK,OAC3H,OACF,OACF,Q,uCACA,qBACE,qBACE,qBAAgD,iEAC9C,sBACF,OACF,OACF,Q,sBACA,qBACE,qBACE,qBACE,yBACF,OACF,OACF,Q,sBACA,qBACE,qBACE,qBACE,qBACE,aAAI,kBAAO,OACb,OACF,OACF,OACF,Q,yBA9BF,oBACE,4BAOA,4BAOA,4BAOA,4BASF,Q,yBA9BoC,sDAOA,sEAOA,mCAOA,qDCvC1C,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCUG,M,MAAMC,EAOX,YACUC,EACAC,EACAC,EACAC,EACAC,EACAC,GALA,KAAAL,cACA,KAAAC,SACA,KAAAC,UACA,KAAAC,aACA,KAAAC,OACA,KAAAC,YAZV,KAAAC,MAAQC,KAAKP,YAAYQ,UACzB,KAAAC,WAAaF,KAAKP,YAAYU,eAGtB,KAAAC,KAAqB,IAAIC,EAAA,EAWjC,WAEEL,KAAKM,KAAO,IAAI,IAChB,IACE,MAAML,EAAUD,KAAKP,YAAYQ,UAAUM,UAClCD,GAAS,YAAD,+BACb,GAAKN,KAAKN,OAAOc,SAAS,IAAqBC,MAAM,IAIjDH,EAAKI,WAAY,CACnB,MACMC,GADM,IAAIC,MACIC,UACpBb,KAAKF,UAAUgB,WAAWH,EAAQI,YAAYC,KAAK,KACjDhB,KAAKL,QAAQsB,gBAAgBjB,KAAKP,YAAYyB,mBAC7CC,MAAM,KACPnB,KAAKP,YAAY2B,kBAItBC,GAAQrB,KAAKJ,WAAW0B,YAAYD,IAEvCrB,KAAKI,KAAKmB,IAAItB,GACd,MAAOoB,GACPrB,KAAKJ,WAAW4B,SAASH,IAI7B,cACErB,KAAKI,KAAKqB,cAGZ,qBACE,MAAMC,EAAc,OAAAC,EAAA,GAAc,CAAC3B,KAAKP,YAAYQ,UAAWD,KAAKP,YAAYU,iBAC7EyB,KACC,OAAAC,EAAA,GAAM,EAAEC,EAAKC,KACG,MAAPD,IAAgBA,EAAIpB,YAAcqB,EAAUC,gBAAkBD,EAAUE,cAGlF1B,UACC,OACCc,IACCa,QAAQC,IAAI,cACZnC,KAAKJ,WAAW4B,SAASH,KAG/BrB,KAAKI,KAAKmB,IAAIG,GAGhB,QACE,IACE1B,KAAKP,YAAY2C,SAAS7B,UACjBD,GAAS,YAAD,+BACb4B,QAAQC,IAAI7B,KAebe,IACCa,QAAQG,MAAM,oBAAqBhB,GACnCrB,KAAKJ,WAAW0C,iBAAiBjB,GACjCrB,KAAKJ,WAAW4B,SAASH,KAG7B,MAAOA,GACPrB,KAAKJ,WAAW0C,iBAAiBjB,GACjCrB,KAAKJ,WAAW4B,SAASH,IAI7B,gBACE,IACErB,KAAKP,YAAY8C,iBAAiBhC,UAChCD,MAGCe,IACCa,QAAQC,IAAId,GAEZrB,KAAKJ,WAAW4B,SAASH,KAG7B,MAAOA,GACPa,QAAQC,IAAId,GACZrB,KAAKJ,WAAW4B,SAASH,K,6CA9GlB7B,GAAS,+D,uBAATA,EAAS,m5BFlBtB,wBACE,qBACE,oBACE,oBACE,mBACE,qBAAgC,eAAI,OACtC,OACF,OACF,OACA,oBACE,oBACE,qBACE,cAAI,6BAAiB,OACvB,OACF,OACF,OACA,qBACE,qBACE,iBACF,OACF,OACA,sBACE,4B,iBAgCF,OACF,OACF,Q,MAlCwC,gD,2TEJjC,KDFA,Y,MAAMgD,G,8BAAAA,I,oDAAAA,IAAsB,SAHxB,CAAC,IAAaC,SAASpD,IACtB,O,GAEL,GEFA,Q,MAAMqD,G,8BAAAA,I,oDAAAA,IAAe,SAHjB,CAAC,IAAc,IAAa,KAAa,M,GAG7C","file":"22.bd8d2d9a9d9328d80bfa.js","sourcesContent":["<ion-content fullscreen=\"true\" class=\"ion-padding\" scrollY=\"false\" class=\"login\">\r\n  <ion-grid class=\"ion-no-padding\">\r\n    <ion-row class=\"ion-align-items-center ion-justify-content-center login-title\">\r\n      <ion-col class=\"ion-text-center ion-margin-top\">\r\n        <ion-text>\r\n          <ion-text class=\"mat-display-3\">MOBY</ion-text>\r\n        </ion-text>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col class=\"ion-text-center ion-text-uppercase\">\r\n        <ion-text color=\"primary\">\r\n          <h2>Your Mobile Buddy</h2>\r\n        </ion-text>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col class=\"ion-text-center\">\r\n        <img src=\"../../../assets/images/login/login.png\" />\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"ion-align-items-center ion-justify-content-center login-button\">\r\n      <ion-col class=\"ion-text-center\" *ngIf=\"(authState$ | async); let state\">\r\n        <ion-grid class=\"ion-no-padding\" *ngIf=\"!state.isLoggingIn && !state.hasSavedToken\">\r\n          <ion-row class=\"ion-align-items-center\">\r\n            <ion-col class=\"loginBtn\">\r\n              <ion-button class=\"ion-margin-start ion-margin-end\" expand=\"block\" fill=\"solid\" color=\"secondary\" (click)=\"login()\">LOGIN</ion-button>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n        <ion-grid class=\"ion-no-padding\" *ngIf=\"!state.isLoggingIn && state.hasSavedToken && !state.loginSuccess\">\r\n          <ion-row class=\"ion-justify-content-center ion-align-item-center\">\r\n            <ion-col class=\"ion-text-center ion-no-padding\" (click)=\"authBiometric()\">\r\n              <ion-icon name=\"finger-print\" class=\"fingerprint\"></ion-icon>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n        <ion-grid class=\"ion-no-padding\" *ngIf=\"state.isLoggingIn\">\r\n          <ion-row class=\"ion-justify-content-center ion-align-item-center\">\r\n            <ion-col class=\"ion-text-center ion-no-padding\">\r\n              <ion-spinner color=\"secondary\"></ion-spinner>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n        <ion-grid class=\"ion-no-padding\" *ngIf=\"!state.isLoggingIn && state.loginSuccess\">\r\n          <ion-row class=\"ion-justify-content-center ion-align-item-center\">\r\n            <ion-col class=\"ion-text-center ion-no-padding\">\r\n              <ion-text color=\"primary\">\r\n                <h2>WELCOME</h2>\r\n              </ion-text>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import {\r\n  AfterContentInit, Component, NgZone, OnDestroy, OnInit\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { DeviceToken } from 'src/app/models/common/device-token.model';\r\nimport { AuthenticationService } from 'src/app/services/common/auth/auth.service';\r\nimport { ErrorService } from 'src/app/services/common/error/error.service';\r\nimport { LoginPageRoutingKeys } from './login-routing.keys';\r\nimport { VaultService } from '../../services/common/vault/vault.service'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit, OnDestroy, AfterContentInit {\r\n  user$ = this.authService.subUser();\r\n  authState$ = this.authService.subAuthState();\r\n  user: DeviceToken;\r\n\r\n  private subs: Subscription = new Subscription();\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private navCtrl: NavController,\r\n    private errService: ErrorService,\r\n    private zone: NgZone,\r\n    private VaultSrvc: VaultService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.user = new DeviceToken()\r\n    try {\r\n      const subUser = this.authService.subUser().subscribe(\r\n        async (user) => {\r\n          if (!this.router.isActive(LoginPageRoutingKeys.BASE, true)) {\r\n            return;\r\n          }\r\n\r\n          if (user.isLoggedIn) {\r\n            const tmp = new Date()\r\n            const session = tmp.getTime()\r\n            this.VaultSrvc.setSession(session.toString()).then(() => {\r\n              this.navCtrl.navigateForward(this.authService.redirectIfAny())\r\n            }).catch(() => {\r\n              this.authService.normalizer()\r\n            })\r\n          }\r\n        },\r\n        (err) => this.errService.handleError(err)\r\n      );\r\n      this.subs.add(subUser);\r\n    } catch (err) {\r\n      this.errService.logError(err);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    const subShowAuth = combineLatest([this.authService.subUser(), this.authService.subAuthState()])\r\n      .pipe(\r\n        first(([usr, authState]) => {\r\n          return usr != null && !usr.isLoggedIn && authState.hasSavedToken && !authState.loadedOAuth;\r\n        })\r\n      )\r\n      .subscribe(\r\n        () => { },\r\n        (err) => {\r\n          console.log('error here')\r\n          this.errService.logError(err)\r\n        }\r\n      );\r\n    this.subs.add(subShowAuth);\r\n  }\r\n\r\n  login() {\r\n    try {\r\n      this.authService.signIn().subscribe(\r\n        async (user) => {\r\n          console.log(user)\r\n\r\n          // if(user.hasSavedToken === false){\r\n          //     await  PushNotifications.requestPermissions().then(result => {\r\n          //       if (result.receive === 'granted') {\r\n          //         PushNotifications.register();\r\n          //       } else {\r\n          //         // Show some error\r\n          //       }\r\n          //     });\r\n          // await  PushNotifications.addListener('registration', (token: Token) => {\r\n          //       this.user.Token = token.value\r\n          //     });\r\n          // }\r\n        },\r\n        (err) => {\r\n          console.error('err at login page', err);\r\n          this.errService.presentServerErr(err);\r\n          this.errService.logError(err);\r\n        }\r\n      );\r\n    } catch (err) {\r\n      this.errService.presentServerErr(err);\r\n      this.errService.logError(err);\r\n    }\r\n  }\r\n\r\n  authBiometric() {\r\n    try {\r\n      this.authService.biometricLogin().subscribe(\r\n        user => {\r\n          // console.log(user)\r\n        },\r\n        (err) => {\r\n          console.log(err)\r\n          // this.errService.presentServerErr(err);\r\n          this.errService.logError(err);\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err)\r\n      this.errService.logError(err);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, LoginPageRoutingModule],\r\n  declarations: [LoginPage],\r\n})\r\nexport class LoginPageModule {}\r\n"],"sourceRoot":"webpack:///"}