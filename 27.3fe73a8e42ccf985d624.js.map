{"version":3,"sources":["./src/app/pages/opportunity/edit-opportunity/edit-opportunity.page.html","./src/app/pages/opportunity/edit-opportunity/edit-opportunity.page.ts","./src/app/pages/opportunity/edit-opportunity/edit-opportunity-routing.module.ts","./src/app/pages/opportunity/edit-opportunity/edit-opportunity.module.ts"],"names":["EditOpportunityPage","formBuilder","route","translate","router","opportunitySrvc","loadingCtrl","navCtrl","contactService","errorSrvc","modalController","auth","alertCtrl","subs","Subscription","companyList","this","getCompanyList","vehicleType","getVehicleType","countryCode","environment","customPPDate","PP_DATE_CUSTOM","subUser","subscribe","u","user","oppForm","initOppForm","add","parseURL","contact","paramMap","params","oppId","get","PARAM_ID","e","pageTitle","getCurrentNavigation","extras","state","states","opportunity","STATE_OPP","Id","getDetails","ContactId","console","log","setUIBackButtonAction","PAGE_HISTORY","backButton","onClick","navigate","BASE","group","id","name","value","disabled","company","required","source","channel","vehType","modelInterest","PPDRange","PPD","warmth","notes","initErrorMessages","form","lang","formErrorMessages","key","Object","keys","controls","from","create","component","componentProps","cmp","team","selectedValues","modal","onDidDismiss","modalData","data","selectedModel","map","model","label","JSON","stringify","setValue","markAsDirty","present","pipe","mergeMap","message","loading","forkJoin","getContactById","tap","ContactName","dismiss","err","presentServerErr","checkForExistingOpp","getPPRange","getCmpgList","getPPDateRange","ppDateRange","opt","push","today","Date","setMonth","setDate","ppDateMin","toJSON","maxDate","getFullYear","ppDateMax","cmpgList","evt","chnlList","Channel","indexOf","reset","enable","disable","o1","o2","checkExistingOpportunity","userId","length","genAlert","opp","header","backdropDismiss","buttons","text","role","handler","back","setTimeout","_","navigateForward","Cmpg","ModelInterest","Company","PlannedPurchaseDateRange","PlannedPurchasedDate","Type","upsertOpp","done","loadCompanyDependentApi","routes","path","children","pathMatch","EditOpportunityPageRoutingModule","forChild","EditOpportunityPageModule"],"mappings":"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","file":"27.3fe73a8e42ccf985d624.js","sourcesContent":["<ion-header>\r\n  <ion-toolbar color=\"primary\" mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"\" text=\"{{'Common_Back'|translate}}\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"done()\">{{'Common_Done'|translate}}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>{{pageTitle}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form [formGroup]=\"oppForm\">\r\n    <ion-grid class=\"ion-no-margin ion-no-padding\">\r\n      <ion-row class=\"ion-no-margin ion-no-padding\">\r\n        <ion-col size=\"12\" class=\"ion-no-margin ion-no-padding\">\r\n          <ion-item>\r\n            <ion-input formControlName=\"name\" placeholder='{{\"EditOpportunityPage_Name\"|translate}}'></ion-input>\r\n          </ion-item>\r\n          <app-item-err [control]=\"oppForm.controls?.name\" [messages]=\"formErrorMessages.name\"></app-item-err>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"ion-no-margin ion-no-padding\">\r\n        <ion-col size=\"12\" class=\"ion-no-margin ion-no-padding\">\r\n          <ion-item>\r\n            <ion-select formControlName=\"company\" placeholder='{{\"EditOpportunityPage_Company\"|translate}}' (ionChange)=\"loadCompanyDependentApi()\">\r\n              <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of companyList\">{{ opt.label }}</ion-select-option>\r\n            </ion-select>\r\n          </ion-item>\r\n          <app-item-err [control]=\"oppForm.controls?.company\" [messages]=\"formErrorMessages.company\"></app-item-err>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"ion-margin-top\" *ngIf=\"oppForm.get('company').value\">\r\n        <ion-col size=\"12\" class=\"ion-margin-bottom ion-margin-top\">\r\n          <ion-grid class=\"ion-no-padding ion-no-margin\">\r\n            <ion-row class=\"ion-no-padding ion-no-margin\">\r\n              <ion-col size=\"12\" class=\"ion-no-padding ion-no-margin\">\r\n                <ion-item *ngIf=\"countryCode === 'my'\">\r\n                  <ion-select formControlName=\"vehType\" placeholder='{{\"EditOpportunityPage_VehicleType\"|translate}}'>\r\n                    <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of vehicleType\">{{ opt.label }} </ion-select-option>\r\n                  </ion-select>\r\n                </ion-item>\r\n                <app-item-err *ngIf=\"countryCode === 'my'\" [control]=\"oppForm.controls?.vehType\" [messages]=\"formErrorMessages.vehType\"></app-item-err>\r\n              </ion-col>\r\n            </ion-row>\r\n\r\n            <ion-row class=\"ion-no-padding ion-no-margin\">\r\n              <ion-col size=\"12\" class=\"ion-no-padding ion-no-margin\">\r\n                <ion-item>\r\n                  <ion-select\r\n                    interface=\"action-sheet\"\r\n                    formControlName=\"source\"\r\n                    (ionChange)=\"changeCmpgSource($event)\"\r\n                    [compareWith]=\"compareId\"\r\n                    placeholder='{{\"OpportunityDetails_Source\"|translate}}'\r\n                  >\r\n                    <ion-select-option [value]=\"opt\" *ngFor=\"let opt of cmpgList\"> {{ opt.Name }}</ion-select-option>\r\n                  </ion-select>\r\n                </ion-item>\r\n                <app-item-err [control]=\"oppForm.controls?.source\" [messages]=\"formErrorMessages.source\"></app-item-err>\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row class=\"ion-no-padding ion-no-margin\">\r\n              <ion-col size=\"12\" class=\"ion-no-padding ion-no-margin\">\r\n                <ion-item>\r\n                  <ion-select multiple=\"true\" formControlName=\"channel\" placeholder='{{\"OpportunityDetails_Channel\"|translate}}'>\r\n                    <ion-select-option [value]=\"opt\" *ngFor=\"let opt of chnlList\"> {{ opt }}</ion-select-option>\r\n                  </ion-select>\r\n                </ion-item>\r\n                <app-item-err [control]=\"oppForm.controls?.channel\" [messages]=\"formErrorMessages.channel\"></app-item-err>\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row class=\"ion-no-padding ion-no-margin\">\r\n              <ion-col size=\"12\" class=\"ion-no-padding ion-no-margin\">\r\n                <ion-item>\r\n                  <ion-select interface=\"action-sheet\" formControlName=\"PPDRange\" placeholder='{{\"OpportunityDetails_PPDRange\"|translate}}'>\r\n                    <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of ppDateRange\"> {{ opt.label }}</ion-select-option>\r\n                  </ion-select>\r\n                </ion-item>\r\n                <app-item-err [control]=\"oppForm.controls?.PPDRange\" [messages]=\"formErrorMessages.PPDRange\"></app-item-err>\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row class=\"ion-no-padding ion-no-margin\">\r\n              <ion-col size=\"12\" class=\"ion-no-padding ion-no-margin\">\r\n                <ion-item *ngIf=\"oppForm.get('PPDRange').value == customPPDate\">\r\n                  <ion-datetime\r\n                    displayFormat=\"DD MMM YYYY\"\r\n                    [min]=\"ppDateMin\"\r\n                    [max]=\"ppDateMax\"\r\n                    formControlName=\"PPD\"\r\n                    placeholder='{{\"OpportunityDetails_PPDDate\"|translate}}'\r\n                  >\r\n                  </ion-datetime>\r\n                </ion-item>\r\n                <app-item-err [control]=\"oppForm.controls?.PPD\" [messages]=\"formErrorMessages.PPD\"></app-item-err>\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row class=\"ion-no-padding ion-no-margin\">\r\n              <ion-col size=\"12\" class=\"ion-no-padding ion-no-margin\">\r\n                <ion-item lines=\"none\">\r\n                  <ion-input formControlName=\"modelInterest\" placeholder=\"Model Interest\" (ionFocus)=\"showModelInterestComp()\" class=\"w100\"></ion-input>\r\n                </ion-item>\r\n                <app-item-err [control]=\"oppForm.controls?.modelInterest\" [messages]=\"formErrorMessages.modelInterest\"></app-item-err>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </ion-col>\r\n      </ion-row>\r\n\r\n      <ion-row>\r\n        <ion-col></ion-col>\r\n      </ion-row>\r\n      <!-- <ion-row class=\"ion-no-margin ion-no-padding ion-margin-top\" *ngIf=\"oppForm.get('company').value\">\r\n        <ion-col size=\"12\" class=\"ion-no-margin ion-no-padding\">\r\n\r\n          <ion-item>\r\n            <ion-textarea rows=\"6\" formControlName=\"notes\" placeholder='{{\"EditContact_Notes\"|translate}}'>\r\n            </ion-textarea>\r\n          </ion-item>\r\n          <app-item-err [control]=\"oppForm.controls?.notes\" [messages]=\"formErrorMessages.notes\"></app-item-err>\r\n\r\n        </ion-col>\r\n      </ion-row> -->\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadingController, ModalController, NavController, AlertController, IonBackButtonDelegate } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { forkJoin, from, Subscription } from 'rxjs';\r\nimport { mergeMap, tap } from 'rxjs/operators';\r\nimport { SelectorComponent } from 'src/app/components/common/selector/selector.component';\r\nimport { ContactModel } from 'src/app/models/common/contact.model';\r\nimport { FormErrorMessages } from 'src/app/models/common/form-error.model';\r\nimport { Opportunity } from 'src/app/models/common/opportunity.model';\r\nimport { SelectOption } from 'src/app/models/common/select-option.model';\r\nimport { CommonContactService } from 'src/app/services/common/contact/contact.service';\r\nimport { ErrorService } from 'src/app/services/common/error/error.service';\r\nimport { CommonOpportunityService } from 'src/app/services/common/opportunity/opportunity.service';\r\nimport { OpportunityDetailsPageRoutingKeys } from '../opportunity-details/opportunity-details-routing.keys';\r\nimport { EditOpportunityPageRoutingKeys } from './edit-opportunity.keys';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ModelInterestSelectorComponent } from 'src/app/components/common/model-interest-selector/model-interest-selector.component';\r\nimport { OppConstant } from 'src/app/services/sg/opportunity/opportunity.constant';\r\nimport { Campaign } from 'src/app/models/common/campaign.model';\r\nimport { User } from 'src/app/models/common/user.model';\r\nimport { AuthenticationService } from 'src/app/services/common/auth/auth.service';\r\nimport { ViewContactPageRoutingKeys } from '../../contact/view-contact/view-contact-routing.keys';\r\n\r\n@Component({\r\n  selector: 'app-edit-opportunity',\r\n  templateUrl: './edit-opportunity.page.html',\r\n  styleUrls: ['./edit-opportunity.page.scss'],\r\n})\r\nexport class EditOpportunityPage implements OnInit {\r\n  @ViewChild(IonBackButtonDelegate, { static: false }) backButton: IonBackButtonDelegate;\r\n\r\n  pageTitle: string;\r\n  private subs = new Subscription();\r\n  oppForm: FormGroup;\r\n  formErrorMessages: FormErrorMessages;\r\n  states: object;\r\n  contact: ContactModel;\r\n  opportunity: Opportunity;\r\n  models: SelectOption[];\r\n  sources: SelectOption[];\r\n  companyList = this.opportunitySrvc.getCompanyList();\r\n  vehicleType = this.opportunitySrvc.getVehicleType();\r\n  countryCode = environment.countryCode;\r\n  ppDateRange: SelectOption[];\r\n  customPPDate: string = OppConstant.PP_DATE_CUSTOM;\r\n  isPPDChanged: boolean;\r\n  ppDateMin: string;\r\n  ppDateMax: string;\r\n  cmpgList: Campaign[];\r\n  chnlList: string[];\r\n  user: User;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private opportunitySrvc: CommonOpportunityService,\r\n    private loadingCtrl: LoadingController,\r\n    private navCtrl: NavController,\r\n    private contactService: CommonContactService,\r\n    private errorSrvc: ErrorService,\r\n    private modalController: ModalController,\r\n    private auth: AuthenticationService,\r\n    private alertCtrl: AlertController\r\n  ) {\r\n    this.auth.subUser().subscribe((u) => {\r\n      this.user = u;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.oppForm = this.initOppForm();\r\n    this.subs.add(this.parseURL());\r\n  }\r\n\r\n  parseURL() {\r\n    this.contact = new ContactModel();\r\n    return this.route.paramMap.subscribe((params) => {\r\n      const oppId = params.get(EditOpportunityPageRoutingKeys.PARAM_ID);\r\n      if (oppId === EditOpportunityPageRoutingKeys.PARAM_ID) {\r\n        this.translate.get('EditOpportunityPage_NewOpportunity').subscribe((e) => {\r\n          this.pageTitle = e;\r\n        });\r\n      } else {\r\n        this.translate.get('EditOpportunityPage_EditOpportunity').subscribe((e) => {\r\n          this.pageTitle = e;\r\n        });\r\n      }\r\n      if (this.router.getCurrentNavigation().extras.state) {\r\n        this.states = this.router.getCurrentNavigation().extras.state;\r\n        this.opportunity = this.states[EditOpportunityPageRoutingKeys.STATE_OPP];\r\n        this.opportunity.Id = oppId === EditOpportunityPageRoutingKeys.PARAM_ID ? null : oppId;\r\n        this.getDetails(this.opportunity.ContactId);\r\n      }\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    console.log('ionViewDidEnter');\r\n    this.setUIBackButtonAction();\r\n  }\r\n\r\n  setUIBackButtonAction() {\r\n    if (this.states[EditOpportunityPageRoutingKeys.PAGE_HISTORY] && this.states[EditOpportunityPageRoutingKeys.PAGE_HISTORY] === 'new_contact') {\r\n      this.backButton.onClick = () => {\r\n        this.router.navigate([ViewContactPageRoutingKeys.BASE + '/' + this.opportunity.ContactId]);\r\n      };\r\n    }\r\n  }\r\n\r\n  private initOppForm(): FormGroup {\r\n    const oppForm = this.formBuilder.group({\r\n      id: [''],\r\n      name: [{ value: '', disabled: true }],\r\n      company: ['', [Validators.required]],\r\n      source: ['', [Validators.required]],\r\n      channel: [[], [Validators.required]],\r\n      vehType: ['', [Validators.required]],\r\n      modelInterest: [[], [Validators.required]],\r\n      PPDRange: [''],\r\n      PPD: [''],\r\n      warmth: [0],\r\n      notes: [''],\r\n    });\r\n    this.initErrorMessages(oppForm);\r\n    return oppForm;\r\n  }\r\n\r\n  private initErrorMessages(form: FormGroup) {\r\n    this.translate.get('Error_CannotBeEmpty').subscribe((lang) => {\r\n      this.formErrorMessages = {\r\n        group: {},\r\n      };\r\n      if (!form) {\r\n        return;\r\n      }\r\n      for (const key of Object.keys(form.controls)) {\r\n        switch (key) {\r\n          case 'company':\r\n          case 'source':\r\n          case 'vehType':\r\n          case 'modelInterest':\r\n            this.formErrorMessages[key] = {\r\n              required: lang,\r\n            };\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  showModelInterestComp() {\r\n    if (!this.oppForm.get('company').value) {\r\n      // show error message to select company\r\n      return;\r\n    }\r\n    from(\r\n      this.modalController.create({\r\n        component: ModelInterestSelectorComponent,\r\n        componentProps: {\r\n          cmp: this.oppForm.get('company').value,\r\n          team: '',\r\n          selectedValues: this.oppForm.get('modelInterest').value,\r\n        },\r\n      })\r\n    ).subscribe((modal) => {\r\n      from(modal.onDidDismiss()).subscribe((modalData) => {\r\n        if (modalData && modalData.data) {\r\n          const selectedModel: Array<string> = modalData.data.map((model) => model.label);\r\n          if (JSON.stringify(this.oppForm.get('modelInterest').value) !== JSON.stringify(selectedModel)) {\r\n            this.oppForm.get('modelInterest').setValue(selectedModel);\r\n            this.oppForm.markAsDirty();\r\n          }\r\n        }\r\n      });\r\n      modal.present();\r\n    });\r\n  }\r\n\r\n  getDetails(id: string) {\r\n    this.translate\r\n      .get('Common_Loading')\r\n      .pipe(\r\n        mergeMap((lang) => {\r\n          return from(\r\n            this.loadingCtrl.create({\r\n              message: lang,\r\n            })\r\n          );\r\n        }),\r\n        mergeMap((loading) => {\r\n          loading.present();\r\n          return forkJoin([\r\n            this.contactService.getContactById(id).pipe(\r\n              tap((e) => {\r\n                this.contact = e;\r\n                this.oppForm.get('name').setValue(this.opportunity.ContactName);\r\n              })\r\n            ),\r\n          ]).pipe(\r\n            tap(\r\n              (e) => {\r\n                loading.dismiss();\r\n              },\r\n              (err) => {\r\n                loading.dismiss();\r\n                this.errorSrvc.presentServerErr(err);\r\n              }\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  loadCompanyDependentApi() {\r\n    if (!this.oppForm.get('company').value) {\r\n      return false;\r\n    }\r\n    const cmp = this.oppForm.get('company').value;\r\n    this.translate\r\n      .get('Common_Loading')\r\n      .pipe(\r\n        mergeMap((lang) => {\r\n          return from(\r\n            this.loadingCtrl.create({\r\n              message: lang,\r\n            })\r\n          );\r\n        }),\r\n        mergeMap((loading) => {\r\n          loading.present();\r\n          return forkJoin([this.checkForExistingOpp(cmp), this.getPPRange(cmp), this.getCmpgList(cmp)]).pipe(\r\n            tap(\r\n              (e) => {\r\n                loading.dismiss();\r\n              },\r\n              (err) => {\r\n                loading.dismiss();\r\n                this.errorSrvc.presentServerErr(err);\r\n              }\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getPPRange(cmp: string) {\r\n    return this.opportunitySrvc.getPPDateRange(cmp).pipe(\r\n      tap((e) => {\r\n        this.ppDateRange = e;\r\n        const opt = new SelectOption();\r\n        opt.label = this.customPPDate;\r\n        opt.value = this.customPPDate;\r\n        this.ppDateRange.push(opt);\r\n        const today = new Date();\r\n        today.setMonth(0);\r\n        today.setDate(1);\r\n        this.ppDateMin = today.toJSON();\r\n        const maxDate = new Date(today.getFullYear() + 1, 11, 31);\r\n        this.ppDateMax = maxDate.toJSON();\r\n      })\r\n    );\r\n  }\r\n\r\n  getCmpgList(cmp: string) {\r\n    return this.opportunitySrvc.getCmpgList(cmp).pipe(\r\n      tap((e) => {\r\n        this.cmpgList = e;\r\n      })\r\n    );\r\n  }\r\n\r\n  changeCmpgSource(evt: Event) {\r\n    if (this.oppForm.get('source') && this.oppForm.get('source').value instanceof Campaign) {\r\n      this.chnlList = this.oppForm.get('source').value.Channel;\r\n      if (this.chnlList.indexOf(this.oppForm.get('channel').value) < 0) {\r\n        this.oppForm.get('channel').reset([]);\r\n      }\r\n      if (this.oppForm.get('channel').disabled) {\r\n        this.oppForm.get('channel').enable();\r\n      }\r\n    } else {\r\n      this.oppForm.get('channel').disable();\r\n    }\r\n  }\r\n\r\n  compareId(o1, o2) {\r\n    return o1 && o2 ? o1.Id === o2.Id : o1 === o2;\r\n  }\r\n\r\n  checkForExistingOpp(cmp: string) {\r\n    const personId = this.opportunity.ContactId;\r\n    const sc = this.user.userId;\r\n    return this.opportunitySrvc.checkExistingOpportunity(personId, cmp, sc).pipe(\r\n      tap((e) => {\r\n        if (e?.length > 0) {\r\n          this.genAlert(e);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  async genAlert(opp: Opportunity[]) {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Duplicate Opportunity',\r\n      message:\r\n        `<p>You have an open opportunity with the same customer,</p>` +\r\n        `<p><Strong>'Use Existing'</Strong> to go to the existing opportunity,</p>` +\r\n        `<p><Strong>'Create New'</Strong> to generate another new opportunity.</p>`,\r\n      backdropDismiss: false,\r\n      buttons: [\r\n        {\r\n          text: 'Create New',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log('Create New clicked');\r\n          },\r\n        },\r\n        {\r\n          text: 'Use Existing',\r\n          handler: () => {\r\n            this.navCtrl.back();\r\n            setTimeout((_) => {\r\n              this.navCtrl.navigateForward(OpportunityDetailsPageRoutingKeys.BASE + '/' + opp[0].Id);\r\n            }, 1000);\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  done() {\r\n    this.opportunity.ContactName = this.oppForm.get('name').value;\r\n    this.opportunity.Cmpg = this.oppForm.get('source').value;\r\n    this.opportunity.Channel = this.oppForm.get('channel').value;\r\n    this.opportunity.ModelInterest = this.oppForm.get('modelInterest').value;\r\n    this.opportunity.Company = this.oppForm.get('company').value;\r\n    this.opportunity.PlannedPurchaseDateRange = this.oppForm.get('PPDRange').value;\r\n    this.opportunity.PlannedPurchasedDate = this.oppForm.get('PPD').value;\r\n    this.opportunity.Type = 'Vehicle Sales';\r\n    this.translate\r\n      .get('Common_Saving')\r\n      .pipe(\r\n        mergeMap((lang) => {\r\n          return from(\r\n            this.loadingCtrl.create({\r\n              message: lang,\r\n            })\r\n          );\r\n        }),\r\n        mergeMap((loading) => {\r\n          loading.present();\r\n          return this.opportunitySrvc.upsertOpp(this.opportunity).pipe(\r\n            tap(\r\n              (e) => {\r\n                this.opportunity = e;\r\n                loading.dismiss();\r\n              },\r\n              (err) => {\r\n                loading.dismiss();\r\n              }\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .subscribe((e) => {\r\n        this.navCtrl.back();\r\n        setTimeout((_) => {\r\n          this.navCtrl.navigateForward(OpportunityDetailsPageRoutingKeys.BASE + '/' + this.opportunity.Id);\r\n        }, 1000);\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EditOpportunityPage } from './edit-opportunity.page';\r\nimport { EditOfferPageRoutingKeys } from '../../offer/edit-offer/edit-offer-routing.keys';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: `:${EditOfferPageRoutingKeys.PARAM_ID}`,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EditOpportunityPage,\r\n        pathMatch: 'full',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EditOpportunityPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EditOpportunityPageRoutingModule } from './edit-opportunity-routing.module';\r\n\r\nimport { EditOpportunityPage } from './edit-opportunity.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ItemErrComponentModule } from 'src/app/components/common/item-err/item-err.module';\r\nimport { SelectorComponentModule } from 'src/app/components/common/selector/selector.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    ItemErrComponentModule,\r\n    SelectorComponentModule,\r\n    EditOpportunityPageRoutingModule,\r\n  ],\r\n  declarations: [EditOpportunityPage],\r\n})\r\nexport class EditOpportunityPageModule {}\r\n"],"sourceRoot":"webpack:///"}