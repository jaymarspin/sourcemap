{"version":3,"sources":["./src/app/pages/tradein/edit-tradein/update-profile/update-profile.page.html","./src/app/pages/tradein/edit-tradein/update-profile/update-profile-routing.module.ts","./src/app/pages/tradein/edit-tradein/update-profile/update-profile.page.ts","./src/app/pages/tradein/edit-tradein/update-profile/update-profile.module.ts"],"names":["routes","path","PARAM_ID","OWNER","children","component","UpdateProfilePage","contactService","formBuilder","route","translate","router","loadingCtrl","navCtrl","oppSrvc","sysCountryCode","environment","countryCode","subs","Subscription","salutationList","this","getContactSalutation","getCountryCodeList","countryList","getCountryList","genderList","getGender","raceList","getRace","cityList","getCities","stateList","getStates","docList","getContactDocType","console","log","contactForm","initContactForm","add","parseURL","contact","paramMap","subscribe","params","oppId","get","owner","getData","id","pipe","mergeMap","lang","from","create","message","loading","present","getOpportunityById","opp","getContactById","ContactId","tap","e","dismiss","setValues","err","of","setValue","Title","Name","PrefName","CompanyName","DocType","DocNum","Race","Gender","MobileNo","CountryCode","Email","Birthday","Line1","Line2","Postcode","City","State","Country","Remarks","group","title","fullName","prefName","company","docType","docNum","race","gender","mobile","email","birthday","line1","line2","postcode","city","state","country","remarks","initErrorMessages","form","formErrorMessages","key","Object","keys","controls","value","upsertContact","back","setTimeout","_","navigateForward","BASE","Id","next","pathMatch","UpdateProfilePageRoutingModule","forChild","UpdateProfilePageModule"],"mappings":"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","file":"38.04737c1f5a215f354556.js","sourcesContent":["<ion-header>\r\n  <ion-toolbar color=\"primary\" mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"\" text=\"{{'Common_Back'|translate}}\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"next()\">{{'Common_Next'|translate}}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>{{'UpdateOwnerTradeIn_OwnerDetails'|translate}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form [formGroup]=\"contactForm\">\r\n    <div>\r\n      <ion-item button>\r\n        <ion-select formControlName=\"title\" placeholder='{{\"UpdateOwnerTradeIn_Salutation\"|translate}}'>\r\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of salutationList\">{{ opt.label }}</ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.title\" [messages]=\"formErrorMessages.title\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"fullName\" placeholder='{{\"UpdateOwnerTradeIn_FullName\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.fullName\" [messages]=\"formErrorMessages.fullName\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"prefName\" placeholder='{{\"UpdateOwnerTradeIn_PreferredName\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.prefName\" [messages]=\"formErrorMessages.prefName\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"company\" placeholder='{{\"UpdateOwnerTradeIn_Company\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.company\" [messages]=\"formErrorMessages.company\"></app-item-err>\r\n      <ion-grid class=\"ion-no-margin ion-no-padding\">\r\n        <ion-row>\r\n          <ion-col>\r\n            <ion-item button>\r\n              <ion-select formControlName=\"docType\" placeholder='{{\"UpdateOwnerTradeIn_ID\"|translate}}'>\r\n                <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of docList\">{{ opt.label }}</ion-select-option>\r\n              </ion-select>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.docType\" [messages]=\"formErrorMessages.docType\"></app-item-err>\r\n          </ion-col>\r\n          <ion-col>\r\n            <ion-item>\r\n              <ion-input formControlName=\"docNum\" placeholder='{{\"UpdateOwnerTradeIn_IDNumber\"|translate}}'></ion-input>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.docNum\" [messages]=\"formErrorMessages.docNum\"></app-item-err>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row>\r\n          <ion-col>\r\n            <ion-item button>\r\n              <ion-select formControlName=\"race\" placeholder='{{\"UpdateOwnerTradeIn_Race\"|translate}}'>\r\n                <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of raceList\">{{ opt.label }}</ion-select-option>\r\n              </ion-select>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.race\" [messages]=\"formErrorMessages.race\"></app-item-err>\r\n          </ion-col>\r\n          <ion-col>\r\n            <ion-item button>\r\n              <ion-select formControlName=\"gender\" placeholder='{{\"UpdateOwnerTradeIn_Gender\"|translate}}'>\r\n                <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of genderList\">{{ opt.label }}</ion-select-option>\r\n              </ion-select>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.gender\" [messages]=\"formErrorMessages.gender\"></app-item-err>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <ion-item>\r\n        <ion-datetime displayFormat=\"MM/DD/YYYY\" formControlName=\"birthday\" placeholder='{{\"UpdateOwnerTradeIn_Birthday\"|translate}}'></ion-datetime>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.birthday\" [messages]=\"formErrorMessages.birthday\"></app-item-err>\r\n    </div>\r\n    <div class=\"ion-margin-top\">\r\n      <ion-grid class=\"ion-no-margin ion-no-padding\">\r\n        <ion-row>\r\n          <ion-col size=\"4\">\r\n            <ion-item button>\r\n              <ion-select formControlName=\"countryCode\" placeholder='{{\"UpdateOwnerTradeIn_CountryCode\"|translate}}'>\r\n                <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of countryCode\">{{ opt.label }} </ion-select-option>\r\n              </ion-select>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.countryCode\" [messages]=\"formErrorMessages.countryCode\"></app-item-err>\r\n          </ion-col>\r\n          <ion-col>\r\n            <ion-item>\r\n              <ion-input formControlName=\"mobile\" placeholder='{{\"UpdateOwnerTradeIn_MobileNumber\"|translate}}'></ion-input>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.mobile\" [messages]=\"formErrorMessages.mobile\"></app-item-err>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <ion-item>\r\n        <ion-input formControlName=\"email\" placeholder='{{\"UpdateOwnerTradeIn_Email\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.email\" [messages]=\"formErrorMessages.email\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"line1\" placeholder='{{\"UpdateOwnerTradeIn_Line1\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.line1\" [messages]=\"formErrorMessages.line1\"></app-item-err>\r\n      <ion-item>\r\n        <ion-input formControlName=\"line2\" placeholder='{{\"UpdateOwnerTradeIn_Line2\"|translate}}'></ion-input>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.line2\" [messages]=\"formErrorMessages.line2\"></app-item-err>\r\n      <ion-grid class=\"ion-no-margin ion-no-padding\">\r\n        <ion-row>\r\n          <ion-col>\r\n            <ion-item>\r\n              <ion-input formControlName=\"postcode\" placeholder='{{\"UpdateOwnerTradeIn_Postcode\"|translate}}'></ion-input>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.postcode\" [messages]=\"formErrorMessages.postcode\"></app-item-err>\r\n          </ion-col>\r\n          <ion-col *ngIf=\"sysCountryCode == 'my'\">\r\n            <ion-item button>\r\n              <ion-select formControlName=\"city\" placeholder='{{\"UpdateOwnerTradeIn_City\"|translate}}'>\r\n                <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of cityList\"> {{ opt.label }} </ion-select-option>\r\n              </ion-select>\r\n            </ion-item>\r\n            <app-item-err [control]=\"contactForm.controls?.city\" [messages]=\"formErrorMessages.city\"></app-item-err>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <ion-item button *ngIf=\"sysCountryCode == 'my'\">\r\n        <ion-select formControlName=\"state\" placeholder='{{\"UpdateOwnerTradeIn_State\"|translate}}' readonly>\r\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of stateList\"> {{ opt.label }} </ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.state\" [messages]=\"formErrorMessages.state\"></app-item-err>\r\n      <ion-item button>\r\n        <ion-select formControlName=\"country\" placeholder='{{\"UpdateOwnerTradeIn_Country\"|translate}}' readonly>\r\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of countryList\"> {{ opt.label }} </ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.country\" [messages]=\"formErrorMessages.country\"></app-item-err>\r\n    </div>\r\n    <div class=\"ion-margin-top\">\r\n      <ion-item>\r\n        <ion-textarea rows=\"6\" formControlName=\"remarks\" placeholder='{{\"UpdateOwnerTradeIn_Notes\"|translate}}'></ion-textarea>\r\n      </ion-item>\r\n      <app-item-err [control]=\"contactForm.controls?.remarks\" [messages]=\"formErrorMessages.remarks\"></app-item-err>\r\n    </div>\r\n  </form>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UpdateProfilePage } from './update-profile.page';\r\nimport { TradeinUpdateProfilePageRoutingKeys } from './update-profile-routing.keys';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: `:${TradeinUpdateProfilePageRoutingKeys.PARAM_ID}/:${TradeinUpdateProfilePageRoutingKeys.OWNER}`,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UpdateProfilePage,\r\n        pathMatch: 'full',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UpdateProfilePageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadingController, NavController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { from, of, Subscription } from 'rxjs';\r\nimport { mergeMap, tap } from 'rxjs/operators';\r\nimport { ContactModel } from 'src/app/models/common/contact.model';\r\nimport { FormErrorMessages } from 'src/app/models/common/form-error.model';\r\nimport { Opportunity } from 'src/app/models/common/opportunity.model';\r\nimport { CommonContactService } from 'src/app/services/common/contact/contact.service';\r\nimport { CommonOpportunityService } from 'src/app/services/common/opportunity/opportunity.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TradeinProfilePageRoutingKeys } from '../tradein-profile/tradein-profile-routing.keys';\r\nimport { TradeinUpdateProfilePageRoutingKeys } from './update-profile-routing.keys';\r\n\r\n@Component({\r\n  selector: 'app-update-profile',\r\n  templateUrl: './update-profile.page.html',\r\n  styleUrls: ['./update-profile.page.scss'],\r\n})\r\nexport class UpdateProfilePage implements OnInit {\r\n  sysCountryCode = environment.countryCode;\r\n  private subs = new Subscription();\r\n  contactForm: FormGroup;\r\n  formErrorMessages: FormErrorMessages;\r\n  salutationList = this.contactService.getContactSalutation();\r\n  countryCode = this.contactService.getCountryCodeList();\r\n  countryList = this.contactService.getCountryList();\r\n  genderList = this.contactService.getGender();\r\n  raceList = this.contactService.getRace();\r\n  cityList = this.contactService.getCities();\r\n  stateList = this.contactService.getStates();\r\n  docList = this.contactService.getContactDocType();\r\n  contact: ContactModel;\r\n  opp: Opportunity;\r\n\r\n  constructor(\r\n    private contactService: CommonContactService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private loadingCtrl: LoadingController,\r\n    private navCtrl: NavController,\r\n    private oppSrvc: CommonOpportunityService\r\n  ) {\r\n    console.log(this.docList);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contactForm = this.initContactForm();\r\n    this.subs.add(this.parseURL());\r\n  }\r\n\r\n  parseURL() {\r\n    this.contact = new ContactModel();\r\n    return this.route.paramMap.subscribe((params) => {\r\n      console.log(params);\r\n      const oppId = params.get(TradeinUpdateProfilePageRoutingKeys.PARAM_ID);\r\n      const owner = params.get(TradeinUpdateProfilePageRoutingKeys.OWNER);\r\n      this.getData(oppId, owner);\r\n    });\r\n  }\r\n\r\n  getData(id: string, owner: string) {\r\n    this.translate\r\n      .get('Common_Loading')\r\n      .pipe(\r\n        mergeMap((lang) => {\r\n          return from(\r\n            this.loadingCtrl.create({\r\n              message: lang,\r\n            })\r\n          );\r\n        }),\r\n        mergeMap((loading) => {\r\n          loading.present();\r\n          return this.oppSrvc.getOpportunityById(id).pipe(\r\n            mergeMap((opp) => {\r\n              this.opp = opp;\r\n              if (owner === 'true') {\r\n                return this.contactService.getContactById(opp.ContactId).pipe(\r\n                  tap(\r\n                    (e) => {\r\n                      loading.dismiss();\r\n                      this.contact = e;\r\n                      this.setValues();\r\n                    },\r\n                    (err) => {\r\n                      loading.dismiss();\r\n                    }\r\n                  )\r\n                );\r\n              } else if (owner === 'false') {\r\n                loading.dismiss();\r\n                return of(ContactModel);\r\n              } else {\r\n                return this.contactService.getContactById(owner).pipe(\r\n                  tap(\r\n                    (e) => {\r\n                      loading.dismiss();\r\n                      this.contact = e;\r\n                      this.setValues();\r\n                    },\r\n                    (err) => {\r\n                      loading.dismiss();\r\n                    }\r\n                  )\r\n                );\r\n              }\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  setValues() {\r\n    this.contactForm.get('title').setValue(this.contact.Title);\r\n    this.contactForm.get('fullName').setValue(this.contact.Name);\r\n    this.contactForm.get('prefName').setValue(this.contact.PrefName);\r\n    this.contactForm.get('company').setValue(this.contact.CompanyName);\r\n    this.contactForm.get('docType').setValue(this.contact.DocType);\r\n    this.contactForm.get('docNum').setValue(this.contact.DocNum);\r\n    this.contactForm.get('race').setValue(this.contact.Race);\r\n    this.contactForm.get('gender').setValue(this.contact.Gender);\r\n    this.contactForm.get('mobile').setValue(this.contact.MobileNo);\r\n    this.contactForm.get('countryCode').setValue(this.contact.CountryCode);\r\n    this.contactForm.get('email').setValue(this.contact.Email);\r\n    this.contactForm.get('birthday').setValue(this.contact.Birthday);\r\n    this.contactForm.get('line1').setValue(this.contact.Line1);\r\n    this.contactForm.get('line2').setValue(this.contact.Line2);\r\n    this.contactForm.get('postcode').setValue(this.contact.Postcode);\r\n    this.contactForm.get('city').setValue(this.contact.City);\r\n    this.contactForm.get('state').setValue(this.contact.State);\r\n    this.contactForm.get('country').setValue(this.contact.Country);\r\n    this.contactForm.get('remarks').setValue(this.contact.Remarks);\r\n  }\r\n\r\n  private initContactForm(): FormGroup {\r\n    const contactForm = this.formBuilder.group({\r\n      id: [''],\r\n      title: [''],\r\n      fullName: [''],\r\n      prefName: [''],\r\n      company: [''],\r\n      docType: [''],\r\n      docNum: [''],\r\n      race: [''],\r\n      gender: [''],\r\n      countryCode: [''],\r\n      mobile: [''],\r\n      email: ['', [Validators.email]],\r\n      birthday: [''],\r\n      line1: [''],\r\n      line2: [''],\r\n      postcode: [''],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      remarks: [''],\r\n    });\r\n    this.initErrorMessages(contactForm);\r\n    return contactForm;\r\n  }\r\n\r\n  private initErrorMessages(form: FormGroup) {\r\n    this.formErrorMessages = {\r\n      group: {},\r\n    };\r\n    if (!form) {\r\n      return;\r\n    }\r\n    for (const key of Object.keys(form.controls)) {\r\n      switch (key) {\r\n        case 'email':\r\n          this.formErrorMessages[key] = {\r\n            email: 'Invalid email.',\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  next() {\r\n    this.contact.Title = this.contactForm.get('title').value;\r\n    this.contact.Name = this.contactForm.get('fullName').value;\r\n    this.contact.PrefName = this.contactForm.get('prefName').value;\r\n    this.contact.CompanyName = this.contactForm.get('company').value;\r\n    this.contact.DocType = this.contactForm.get('docType').value;\r\n    this.contact.DocNum = this.contactForm.get('docNum').value;\r\n    this.contact.Race = this.contactForm.get('race').value;\r\n    this.contact.Gender = this.contactForm.get('gender').value;\r\n    this.contact.MobileNo = this.contactForm.get('mobile').value;\r\n    this.contact.CountryCode = this.contactForm.get('countryCode').value;\r\n    this.contact.Email = this.contactForm.get('email').value;\r\n    this.contact.Birthday = this.contactForm.get('birthday').value;\r\n    this.contact.Line1 = this.contactForm.get('line1').value;\r\n    this.contact.Line2 = this.contactForm.get('line2').value;\r\n    this.contact.Postcode = this.contactForm.get('postcode').value;\r\n    this.contact.City = this.contactForm.get('city').value;\r\n    this.contact.State = this.contactForm.get('state').value;\r\n    this.contact.Country = this.contactForm.get('country').value;\r\n    this.contact.Remarks = this.contactForm.get('remarks').value;\r\n    this.translate\r\n      .get('Common_Saving')\r\n      .pipe(\r\n        mergeMap((lang) => {\r\n          return from(\r\n            this.loadingCtrl.create({\r\n              message: lang,\r\n            })\r\n          );\r\n        }),\r\n        mergeMap((loading) => {\r\n          loading.present();\r\n          return this.contactService.upsertContact(this.contact).pipe(\r\n            tap(\r\n              (e) => {\r\n                this.contact = e;\r\n                loading.dismiss();\r\n              },\r\n              (err) => {\r\n                loading.dismiss();\r\n              }\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .subscribe((e) => {\r\n        this.navCtrl.back();\r\n        setTimeout((_) => {\r\n          this.navCtrl.navigateForward(TradeinProfilePageRoutingKeys.BASE + '/' + this.opp.Id + '/' + this.contact.Id);\r\n        }, 1000);\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UpdateProfilePageRoutingModule } from './update-profile-routing.module';\r\n\r\nimport { UpdateProfilePage } from './update-profile.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ItemErrComponentModule } from 'src/app/components/common/item-err/item-err.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, ReactiveFormsModule, TranslateModule, ItemErrComponentModule, UpdateProfilePageRoutingModule],\r\n  declarations: [UpdateProfilePage],\r\n})\r\nexport class UpdateProfilePageModule {}\r\n"],"sourceRoot":"webpack:///"}